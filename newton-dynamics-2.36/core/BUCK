load("//defs.bzl", "global_compiler_flags")
load("//defs.bzl", "global_linker_flags")

cxx_library(
    name = "core",
    visibility = ["//newton-dynamics-2.36/..."],
    header_namespace = "",
    exported_headers = [
        "dg.h",
        "dgAABBPolygonSoup.h",
        "dgArray.h",
        "dgCRC.h",
        "dgConvexHull3d.h",
        "dgConvexHull4d.h",
        "dgDebug.h",
        "dgDelaunayTetrahedralization.h",
        "dgGeneralMatrix.h",
        "dgGeneralVector.h",
        "dgGoogol.h",
        "dgGraph.h",
        "dgHeap.h",
        "dgIntersections.h",
        "dgList.h",
        "dgMatrix.h",
        "dgMemory.h",
        "dgNode.h",
        "dgPathFinder.h",
        "dgPlane.h",
        "dgPolygonSoupBuilder.h",
        "dgPolygonSoupDatabase.h",
        "dgPolyhedra.h",
        "dgPolyhedraMassProperties.h",
        "dgQuaternion.h",
        "dgRandom.h",
        "dgRef.h",
        "dgRefCounter.h",
        "dgRtti.h",
        "dgSPDMatrix.h",
        "dgSimd_Instrutions.h",
        "dgSmallDeterminant.h",
        "dgSphere.h",
        "dgStack.h",
        "dgStdafx.h",
        "dgThreads.h",
        "dgTree.h",
        "dgTypes.h",
        "dgVector.h",
    ],
    srcs = [
        "dg.cpp",
        "dgAABBPolygonSoup.cpp",
        "dgCRC.cpp",
        "dgConvexHull3d.cpp",
        "dgConvexHull4d.cpp",
        "dgDebug.cpp",
        "dgDelaunayTetrahedralization.cpp",
        "dgGeneralMatrix.cpp",
        "dgGeneralVector.cpp",
        "dgGoogol.cpp",
        "dgIntersections.cpp",
        "dgMatrix.cpp",
        "dgMemory.cpp",
        "dgNode.cpp",
        "dgPolygonSoupBuilder.cpp",
        "dgPolyhedra.cpp",
        "dgPolyhedraMassProperties.cpp",
        "dgQuaternion.cpp",
        "dgRandom.cpp",
        "dgRef.cpp",
        "dgRefCounter.cpp",
        "dgSPDMatrix.cpp",
        "dgSmallDeterminant.cpp",
        "dgSphere.cpp",
        "dgThreads.cpp",
        "dgTree.cpp",
        "dgTypes.cpp",
    ],
    exported_preprocessor_flags = [
        "-D_SCALAR_ARITHMETIC_ONLY",
    ],
    compiler_flags = global_compiler_flags,
    linker_flags = global_linker_flags,
    link_style = "static",
)

